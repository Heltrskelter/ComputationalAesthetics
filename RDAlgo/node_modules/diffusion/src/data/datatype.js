var _interface = require('util/interface').interface;

/**
 * A data type is specified for a particular value type. It provides methods to
 * convert values to and from binary. Diffusion provides several {@link diffusion.datatypes.DataType}
 * implementations.
 * <P>
 * A data type can optionally support incremental changes to values, represented
 * by one or more types of <em>delta</em>. A delta is the difference between two
 * values. For large or composite values that change in small steps, it is more
 * efficient to transmit an initial value followed by a delta for each change
 * than to transmit a complete value for each change. The data type provides an
 * implementation of {@link diffusion.datatypes.DeltaType} for each type of delta it
 * supports via {@link diffusion.datatypes.DataType#deltaType}.
 *
 * @class diffusion.datatypes.DataType
 * @since 5.7
 */
module.exports = _interface('DataType', [
    /**
     * The external type identifier.
     *
     * @returns {String} The name of this datatype.
     * @function diffusion.datatypes.DataType#name
     */
    'name',

    /**
     * Parse a value from binary.
     *
     * @param {Buffer} input - The binary data
     * @param {Number} [offset] - The offset to start reading from the provided buffer
     * @param {Number} [length] - The length of the data to read
     * @returns {Object} An instance of this data type value
     * @throws Error if the data is invalid for this type
     *
     * @function diffusion.datatypes.DataType#readValue
     */
    'readValue',

    /**
     * Serialise a value to binary
     *
     * @param {Object} value - The value to serialise
     * @returns {Buffer} The serialised value as a buffer
     * @throws Error if the value can not be serialised
     *
     * @function diffusion.datatypes.DataType#writeValue
     */
    'writeValue',

    /**
     * Obtain a {@link diffusion.datatypes.DeltaType} by name or delta type.
     *
     * @example
     * // Get by name
     * var deltas = datatype.deltaType("binary");
     *
     * @example
     * // Get by type
     * var deltas = datatype.deltaType(delta);
     *
     * @param {String} [name] - The name, as returned by {@link diffusion.datatypes.DeltaType#name}
     * @param {Object} [delta] - The delta, from which a type-appropriate dela support will be derived
     * @returns {diffusion.datatypes.DeltaType} the delta support

     * @function diffusion.datatypes.DataType#deltaType
     */
    'deltaType'
]);
