function CloseReason(id, message, canReconnect) {
    this.id = id;
    this.message = message;
    this.canReconnect = canReconnect;
}

CloseReason.CLOSED_BY_CLIENT = new CloseReason(0, "The session was closed by the client", false);
CloseReason.CLOSED_BY_SERVER = new CloseReason(1, "The session was closed by the server", false);
CloseReason.RECONNECT_ABORTED = new CloseReason(2, "Client aborted a reconnect attempt", false);
CloseReason.CONNECTION_TIMEOUT = new CloseReason(3, "The connection attempt timed out", false);
CloseReason.HANDSHAKE_REJECTED = new CloseReason(4, "The connection handshake was rejected by the server", false);
CloseReason.HANDSHAKE_ERROR = new CloseReason(5, "There was an error parsing the handshake response", false);
CloseReason.TRANSPORT_ERROR = new CloseReason(6, "There was an unexpected error with the connection", true);
CloseReason.CONNECTION_ERROR = new CloseReason(7, "A connection to the server was unable to be established", true);
CloseReason.IDLE_CONNECTION = new CloseReason(8, "The activity monitor detected the connection was idle", true);
CloseReason.LOST_MESSAGES = new CloseReason(16, "Loss of messages has been detected", false);

module.exports = CloseReason;
