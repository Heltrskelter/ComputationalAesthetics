var _implements = require('util/interface')._implements;
var DataTypes = require('../../data/datatypes');
var TopicType = require('../../topics/topics').TopicType;

var BinaryDataTypeImpl = require('data/binary/binary-datatype-impl');
var BinaryImpl = require('data/binary/binary-impl');

var JSONDataTypeImpl = require('data/json/json-datatype-impl');
var JSONImpl = require('data/json/json-impl');

var DataTypesImpl = _implements(DataTypes, function DataTypesImpl() {
    var binary = new BinaryDataTypeImpl();
    var json = new JSONDataTypeImpl();

    var self = this;

    this.binary = function() {
        return binary;
    };

    this.json = function() {
        return json;
    };

    this.get = function(name) {
        switch (typeof name) {
            case "string" :
                switch (name.toLowerCase()) {
                    case 'json' :
                        return self.json();
                    case 'binary' :
                        return self.binary();
                }
                break;
            case "object" :
                if (name === TopicType.BINARY || BinaryImpl.isPrototypeOf(name) || Buffer.isBuffer(name)) {
                    return self.binary();
                }

                if (name === TopicType.JSON || JSONImpl.isPrototypeOf(name) || name.constructor === Object) {
                    return self.json();
                }
        }

        return null;
    };
});

module.exports = new DataTypesImpl();
