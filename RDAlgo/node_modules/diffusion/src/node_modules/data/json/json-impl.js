var _implements = require('util/interface')._implements;
var BytesImpl = require('data/bytes-impl');
var Decoder = require('cbor/decoder');

var JSONDeltaImpl = require('data/json/json-delta-impl');
var JSONType = require('../../../data/json/json');

/**
 *
 * @type {Function}
 * @param {Datatype} The datatype
 * @param {Buffer} buffer
 * @param {Number} offset
 * @param {Number} length
 */
module.exports = _implements(JSONType, function JSONImpl(datatype, buffer, offset, length) {
    BytesImpl.__constructor.call(this, buffer, offset, length);

    var self = this;

    this.get = function() {
        var decoder = new Decoder(buffer, offset, length);
        return decoder.nextValue();
    };

    this.diff = function(original, type) {
        var binaryDiff = datatype.deltaType("binary").diff(original, self);

        if (type === "json") {
            return new JSONDeltaImpl(datatype, original, self, binaryDiff);
        } else {
            return binaryDiff;
        }
    };

    this.jsonDiff = function(original) {
        return self.diff(original, "json");
    };

    this.apply = function(delta) {
        return datatype.deltaType(delta).apply(self, delta);
    };

    this.toString = function() {
        return JSON.stringify(self.get());
    };
});