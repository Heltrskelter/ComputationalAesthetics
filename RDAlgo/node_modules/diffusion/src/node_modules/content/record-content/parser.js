var BufferInputStream = require('io/buffer-input-stream');
var RecordContent = require('./record-content');
var consts = require('content/consts');

module.exports = function RecordContentParser(buffer) {
    var records = [];

    if (buffer.length === 1 && buffer[0] === consts.RECORD_MU) {
        records.push(new RecordContent.Record([]));
    } else if (buffer.length > 0) {
        var bis = new BufferInputStream(buffer);

        while (bis.hasRemaining()) {
            var rbis = new BufferInputStream(bis.readUntil(consts.RECORD_DELIMITER));
            var fields = [];

            while (rbis.hasRemaining()) {
                var field = rbis.readUntil(consts.FIELD_DELIMITER);

                if (field.length === 0 || (field.length === 1 && ((fields.length === 0 && 
                                                                   field[0] === consts.FIELD_MU) || 
                                                                   field[0] === consts.EMPTY_FIELD))) {
                    fields.push(undefined);
                } else {
                    fields.push(field.toString());
                }
            }

            var rbuffer = rbis.buffer;
            if (rbuffer[rbuffer.length - 1] === consts.FIELD_DELIMITER) {
                fields.push(undefined);
            }
            
            records.push(new RecordContent.Record(fields));
        }

        if (buffer[buffer.length - 1] === consts.RECORD_DELIMITER) {
            records.push(new RecordContent.Record([]));
        }
    }

    return new RecordContent(records);
};
