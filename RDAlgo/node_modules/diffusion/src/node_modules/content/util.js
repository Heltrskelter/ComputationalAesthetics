var Codec = require('io/codec');
var BufferOutputStream = require('io/buffer-output-stream');

var RC = require('content/record-content/record-content');
var SRC = require('content/structured-record-content/record-content');

var consts = require('content/consts');

function getDefaultContentBytes(content) {
    return new Buffer(content.toString());
}

function getRecordContentBytes(content) {
    var bos = new BufferOutputStream();
    var recordDelimiter = false;

    content.forEach(function writeRecord(r) {
        var fieldDelimiter = false;

        if (recordDelimiter) {
            bos.writeInt8(consts.RECORD_DELIMITER);
        } else {
            recordDelimiter = true;
        }

        r.forEach(function writeField(f) {
            if (fieldDelimiter) {
                bos.writeInt8(consts.FIELD_DELIMITER);
            } else {
                fieldDelimiter = true;
            }

            bos.writeString(f.toString());
        });
    });

    return bos.getBuffer();
}

function isRecordContent(content) {
    return RC.isPrototypeOf(content) || SRC.isPrototypeOf(content);
}

function getBytes(content) {
    if (content.$buffer) {
        return content.$buffer.slice(content.$offset, content.$length);
    } else if (isRecordContent(content)) {
        return getRecordContentBytes(content);
    } else {
        return getDefaultContentBytes(content);
    }
}

module.exports = {
    getBytes : getBytes,
    isRecordContent : isRecordContent
};