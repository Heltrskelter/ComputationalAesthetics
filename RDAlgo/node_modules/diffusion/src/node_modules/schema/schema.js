var util = require('metadata/util');
var ATTR = require('schema/consts').ATTR;

function createRecordSchema(metadata) {
    if (metadata.getRecords().length === 0) {
        return null;
    }

    var schema = { message : { record : [] } };
    schema.message[ATTR] = {
        topicDataType : 'record',
        name : metadata.name
    };

    metadata.getRecords().forEach(function(record) {
        var rschema = { field : [] };
        rschema[ATTR] = record.getDetails();

        record.getFields().forEach(function(field) {
            rschema.field.push(createSingleValueSchema(field).field);
        });

        schema.message.record.push(rschema);
    });

    return schema;
}

function createSingleValueSchema(metadata) {
    var schema = { field : { } };
    schema.field[ATTR] = metadata.getDetails();

    return schema;
}

function create(meta) {
    switch (util.getType(meta)) {
    case util.Type.RECORD :
        return createRecordSchema(meta);
    case util.Type.SINGLE_VALUE :
        return createSingleValueSchema(meta);
    }

    return null;
}

module.exports = create;