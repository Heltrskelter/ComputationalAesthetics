/**
 * Split a string around a given delimiter.
 * <P>
 * This differs from String.split in two ways:
 * <ol>
 * <li>If the input string is empty, this function will return an empty array, 
 * not a  single-element array containing an empty string.
 * </li>
 * <li>The string will be split into substrings that terminate with the specified
 * delimiter, rather than splitting immediately when a delimiter is found.
 * 
 * @example
 * split("foo/bar/", "/"); // Returns ["foo", "bar"];
 * 
 * @example
 * split("foo///", "//"); // Returns ["foo/"];
 * 
 * @param {String} str - The value to split
 * @param {String} delim - The delimiter to split on
 * @returns {Array} The split parts
 */
function split(str, delim) {
    if (str === "") {
        return [];
    }
    
    var parts = [], l = delim.length, i = str.lastIndexOf(delim);
    
    while (i > -1) {
        parts.push(str.substring(i + l, str.length));
        str = str.substring(0, i);
        i = str.lastIndexOf(delim);
    }
    
    parts.push(str);
    
    return parts.reverse();
}

module.exports = {
    split : split
};