// Utils that make use of MRecordContent
var Type = require('../../topics/topics').TopicType;
var util = require('./util-single-value');
var cutil = require('content/util');

var MRecordContent = require('./record-content');

function getType(metadata) {
    if (MRecordContent.isPrototypeOf(metadata)) {
        return Type.RECORD;
    } else {
        return util.getType(metadata);
    }
}

function isMetadata(value) {
    return MRecordContent.isPrototypeOf(value) || util.isMetadata(value);
}

function isMetadataValue(value) {
    return MRecordContent.isPrototypeOf(value) || util.isMetadataValue(value) || cutil.isRecordContent(value);
}

function deriveMetadata(value) {
    if (isMetadata(value)) {
        return value;
    }

    return util.deriveMetadata(value);
}

module.exports = {
    Type : Type,
    getType : getType,
    isMetadata : isMetadata,
    isMetadataValue : isMetadataValue,
    deriveMetadata : deriveMetadata
};
