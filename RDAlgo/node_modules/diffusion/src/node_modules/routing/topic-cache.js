var NoValueEntry = require('routing/topic-cache-no-value-entry');
var DatatypeEntry = require('routing/topic-cache-datatype-entry');
var SingleEntry = require('routing/topic-cache-single-value-entry');

var UnsubscribeReason = require('../../topics/topics').UnsubscribeReason;
var TopicType = require('../../topics/topics').TopicType;

module.exports = function TopicCache(datatypes) {
    var byPath = {};
    var byId = {};

    this.handleSubscription = function(info, registry) {
        var path = info.path;

        var existing = byPath[path];

        if (existing) {
            existing.notifyUnsubscription(UnsubscribeReason.SUBSCRIPTION_REFRESH, registry);
        }

        var streams = registry.streamsFor(path, info.details);
        var entry;

        switch (info.details.type) {
            case TopicType.JSON :
                entry = new DatatypeEntry(info, streams, datatypes.json());
                break;
            case TopicType.BINARY :
                entry = new DatatypeEntry(info, streams, datatypes.binary());
                break;
            case TopicType.SINGLE_VALUE :
                entry = new SingleEntry(info, streams);
                break;
            default :
                entry = new NoValueEntry(info, streams);
        }

        byId[info.id] = entry;
        byPath[path] = entry;

        entry.notifyInitialSubscription(registry);
    };

    this.handleValue = function(session, path, content, registry) {
        var errorHandler = session.getErrorHandler();
        var entry = byPath[path];

        if (entry) {
            entry.handleValue(content, registry, errorHandler);
        } else {
            errorHandler(new Error("Data loss on topic " + path + " - possibly due to reconnection"));
        }
    };

    this.handleDelta = function(session, path, delta, registry) {
        var errorHandler = session.getErrorHandler();
        var entry = byPath[path];

        if (entry) {
            entry.handleDelta(delta, registry, errorHandler);
        } else {
            errorHandler(new Error("Data loss on topic " + path + " - possibly due to reconnection"));
        }
    };

    this.handleUnsubscription = function(id, reason, registry) {
        var entry = byId[id];
        delete byId[id];

        if (entry) {
            var path = entry.getTopicPath();
            delete byPath[path];

            entry.notifyUnsubscription(reason, registry);
        }
    };

    this.newStream = function(selector, stream, registry) {
        for (var path in byPath) {
            var entry = byPath[path];

            if (selector.selects(path) && stream.selects(entry.getTopicDetails())) {
                entry.addStream(stream, registry);
            }
        }
    };

    this.removeStream = function(stream, registry) {
        for (var path in byPath) {
            byPath[path].removeStream(stream, registry);
        }
    };

    this.removeAllStreams = function() {
        for (var path in byPath) {
            byPath[path].removeAllStreams();
        }
    };

    this.clear = function() {
        byPath = {};
        byId = {};
    };
};

