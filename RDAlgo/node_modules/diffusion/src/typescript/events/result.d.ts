export interface Result<T, E> {
  then<TResult, TE>(fulfilled: (value: T) => TResult | Result<TResult, TE>, rejected?: (reason: any) => void): Result<TResult, E>;
}

export interface SessionPropertiesResult<T, E> {
  then<TResult, TE>(fulfilled: (session: string, properties: string[]) => TResult | SessionPropertiesResult<TResult, TE>, rejected?: (reason: any) => void): SessionPropertiesResult<TResult, E>;
}
