import {Result} from '../events/result.d';
import {MessageHandler} from '../handlers/message-handler.d';
import {Stream} from '../events/stream.d';

export interface Messages {
  send: (path: string, message: any, sessionID?: string | Object) => Result<SendResult, any>;
  listen: (path: string, listener?: (message: SessionMessage) => void) => MessageStream;
  addHandler: (path: string, handler: MessageHandler) => Result<void, any>;
}

export interface MessageStream extends Stream {
}

export interface Message {
  path: string;
  content: any;
}

export interface SessionMessage extends Message {
  session: string;
  options: any;
  properties?: any;
}

export interface SendResult {
  path: string,
  recipient: string;
}
