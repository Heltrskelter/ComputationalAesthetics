import {Result} from './../events/result';
import {UpdateSourceHandler} from './../handlers/update-source-handler.d';
import {TopicSelector} from '../selectors/topic-selector.d';

export interface TopicControl {
  add: (path: string, supplied?: any, initial?: any) => Result<AddResult, any>;
  remove: (path: string) => Result<RemoveResult, any>;
  removeWithSession: (topicPath: string) => Result<RemoveWithSessionResult, any>;
  update: (path: string, value: any) => Result<string, any>;
  registerUpdateSource: (topicPath: string, handler: UpdateSourceHandler) => any;
  addMissingTopicHandler: (path: string, handler: MissingTopicHandler) => Result<any, any>;
}

export interface Updater {
  update: (topicPath: string, value: any) => Result<void, any>
}

export interface AddResult {
  topic: string,
  added: boolean
}

export interface RemoveResult {

}

export interface RemoveWithSessionResult {
  deregister: () => Result<void, any>;
}

export interface MissingTopicHandler {
  onClose: (topicPath: string) => void;
  onError: (topicPath: string, error: any) => void;
  onMissingTopic: (notification: MissingTopicNotification) => void;
  onRegister: (topicPath: string, deregister: any) => void;
}

export interface MissingTopicNotification {
  path: string;
  selector: TopicSelector;
  sessionID: string;
  cancel: () => void;
  proceed: () => void;
}
