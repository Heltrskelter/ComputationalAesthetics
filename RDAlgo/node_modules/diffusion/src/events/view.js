var _interface = require('util/interface').interface;
var Stream = require('./stream');

/**
 * An aggregate view of topics and their values, reflected as a single structure
 * that is updated in real time.
 * <P>
 * Because {@link View Views} are bound to a particular topic selector,
 * it is possible for the structure to change as topics are added or removed
 * that match the selector.
 *
 * @example
 * var view = session.view('?foo//');
 * var data = view.get();
 *
 * // Log the current value of the topic 'foo'
 * console.log(data.foo);
 *
 * // Log the current value of the topic 'foo/bar/baz'
 * console.log(data.foo.bar.baz);
 *
 * @example
 * var view = session.view('?foo//');
 *
 * view.on('update', function(data) {
 *     // Log the current state of the view
 *     console.log(data);
 * });
 *
 * @class View
 *
 * @emits update
 *
 * @augments Stream
  */
module.exports = _interface('View', Stream, [
    /**
     * Returns a read-only version of the the view's current state. This will
     * reflect modifications caused by any future updates.
     *
     * @returns {Object} The view state
     * @function View#get
     */
    'get'
]);
