var _interface = require('util/interface').interface;

/**
 * The specification of a topic.
 * <P>
 * A topic is specified in terms of its {@link diffusion.topics.TopicType type} and a map of
 * optional property settings which can alter the default behavior of the topic.
 * <P>
 * <h5>Properties</h5>
 * <table class="table striped">
 * <thead>
 * <tr>
 * <th>Name</th>
 * <th>Description</th>
 * </tr>
 * </thead>
 * <tbody>
 * <tr>
 * <td><code>PUBLISH_VALUES_ONLY</code></td>
 * <td>
 * Topic property indicating whether a topic should publish only
 * values.
 * <P>
 * By default, topics with a topic {@link DataTypes.DataType} that supports deltas
 * will publish a delta when doing so is more efficient than publishing the
 * value. Setting this property to 'true' disables this behavior so that
 * deltas are never published. This would result in more data being
 * transmitted, but would allow the client to only have to process values
 * and not deltas.
 * <P>
 * For topic {@link DataType}s that do not have delta support this value is
 * irrelevant as only values would ever be published.
 * </td>
 * </tr>
 * <td><code>VALIDATE_VALUES</code>
 * <td>
 * Topic property indicating whether a topic should validate
 * inbound values.
 * <P>
 * By default, the server does not validate received values before sending
 * them on to clients. Invalid or corrupt values will be stored in the topic
 * and passed on to clients. If this property is set to 'true', the server
 * will perform additional validation on values to check that it is a valid
 * instance of the data type, and if it is not then it will return an error
 * to the updater and not update the topic.
 * <P>
 * If this value is not set (or set to something other than 'true'), no
 * server validation of inbound values is performed. This is the recommended
 * setting as there is a performance overhead to validation.
 * </td>
 * </tr>
 * </tbody>
 * </table>
 *
 * @class TopicSpecification
 * @property {diffusion.topics.TopicType} type - The topic type.
 * @property {Object} properties - A map of the topic properties.
 * This may be empty depending upon the level of detail requested.

 * @since 5.7
 */
module.exports = _interface('TopicSpecification', [
    /*
     * The topic type.
     */
    'type',

    /*
     * A map of the topic properties. This may be empty depending upon the level of detail requested.
     */
    'properties'
]);